/* tslint:disable */
/* eslint-disable */


/**
 * AUTO-GENERATED FILE - DO NOT EDIT!
 *
 * This file was automatically generated by pg-to-ts v.4.1.1
 * $ pg-to-ts generate -c postgresql://username:password@127.0.0.1:5432/postgres -t add_on -t blocked_time -t bookings -t business_hours -t customers -t forms -t order_lines -t orders -t pricing_rules -t resource_availability -t resource_blocked_time -t resource_types -t resources -t schemaversion -t services -t tenant_settings -t tenants -t time_slots -s public
 *
 */


export type Json = unknown;

// Table add_on
export interface AddOn {
  id: string;
  tenant_id: string;
  name: string;
  price: number;
  price_currency: string;
  expect_quantity: boolean;
  section: string | null;
}
export interface AddOnInput {
  id: string;
  tenant_id: string;
  name: string;
  price: number;
  price_currency: string;
  expect_quantity: boolean;
  section?: string | null;
}
const add_on = {
  tableName: 'add_on',
  columns: ['id', 'tenant_id', 'name', 'price', 'price_currency', 'expect_quantity', 'section'],
  requiredForInsert: ['id', 'tenant_id', 'name', 'price', 'price_currency', 'expect_quantity'],
  primaryKey: 'id',
  foreignKeys: { tenant_id: { table: 'tenants', column: 'tenant_id', $type: null as unknown as Tenants }, },
  $type: null as unknown as AddOn,
  $input: null as unknown as AddOnInput
} as const;

// Table blocked_time
export interface BlockedTime {
  id: string;
  tenant_id: string;
  date: string;
  start_time_24hr: string;
  end_time_24hr: string;
}
export interface BlockedTimeInput {
  id: string;
  tenant_id: string;
  date: string;
  start_time_24hr: string;
  end_time_24hr: string;
}
const blocked_time = {
  tableName: 'blocked_time',
  columns: ['id', 'tenant_id', 'date', 'start_time_24hr', 'end_time_24hr'],
  requiredForInsert: ['id', 'tenant_id', 'date', 'start_time_24hr', 'end_time_24hr'],
  primaryKey: 'id',
  foreignKeys: { tenant_id: { table: 'tenants', column: 'tenant_id', $type: null as unknown as Tenants }, },
  $type: null as unknown as BlockedTime,
  $input: null as unknown as BlockedTimeInput
} as const;

// Table bookings
export interface Bookings {
  id: string;
  tenant_id: string;
  customer_id: string;
  service_id: string;
  order_id: string;
  date: string;
  start_time_24hr: string;
  end_time_24hr: string;
  definition: Json;
}
export interface BookingsInput {
  id?: string;
  tenant_id: string;
  customer_id: string;
  service_id: string;
  order_id: string;
  date: string;
  start_time_24hr: string;
  end_time_24hr: string;
  definition: Json;
}
const bookings = {
  tableName: 'bookings',
  columns: ['id', 'tenant_id', 'customer_id', 'service_id', 'order_id', 'date', 'start_time_24hr', 'end_time_24hr', 'definition'],
  requiredForInsert: ['tenant_id', 'customer_id', 'service_id', 'order_id', 'date', 'start_time_24hr', 'end_time_24hr', 'definition'],
  primaryKey: 'id',
  foreignKeys: {
    tenant_id: { table: 'tenants', column: 'tenant_id', $type: null as unknown as Tenants },
    customer_id: { table: 'customers', column: 'id', $type: null as unknown as Customers },
    service_id: { table: 'services', column: 'id', $type: null as unknown as Services },
  },
  $type: null as unknown as Bookings,
  $input: null as unknown as BookingsInput
} as const;

// Table business_hours
export interface BusinessHours {
  id: string;
  tenant_id: string;
  day_of_week: string;
  start_time_24hr: string;
  end_time_24hr: string;
}
export interface BusinessHoursInput {
  id: string;
  tenant_id: string;
  day_of_week: string;
  start_time_24hr: string;
  end_time_24hr: string;
}
const business_hours = {
  tableName: 'business_hours',
  columns: ['id', 'tenant_id', 'day_of_week', 'start_time_24hr', 'end_time_24hr'],
  requiredForInsert: ['id', 'tenant_id', 'day_of_week', 'start_time_24hr', 'end_time_24hr'],
  primaryKey: 'id',
  foreignKeys: { tenant_id: { table: 'tenants', column: 'tenant_id', $type: null as unknown as Tenants }, },
  $type: null as unknown as BusinessHours,
  $input: null as unknown as BusinessHoursInput
} as const;

// Table customers
export interface Customers {
  id: string;
  tenant_id: string;
  first_name: string;
  last_name: string;
  email: string;
}
export interface CustomersInput {
  id?: string;
  tenant_id: string;
  first_name: string;
  last_name: string;
  email: string;
}
const customers = {
  tableName: 'customers',
  columns: ['id', 'tenant_id', 'first_name', 'last_name', 'email'],
  requiredForInsert: ['tenant_id', 'first_name', 'last_name', 'email'],
  primaryKey: 'id',
  foreignKeys: { tenant_id: { table: 'tenants', column: 'tenant_id', $type: null as unknown as Tenants }, },
  $type: null as unknown as Customers,
  $input: null as unknown as CustomersInput
} as const;

// Table forms
export interface Forms {
  id: string;
  tenant_id: string;
  name: string;
  description: string | null;
  definition: Json;
}
export interface FormsInput {
  id: string;
  tenant_id: string;
  name: string;
  description?: string | null;
  definition: Json;
}
const forms = {
  tableName: 'forms',
  columns: ['id', 'tenant_id', 'name', 'description', 'definition'],
  requiredForInsert: ['id', 'tenant_id', 'name', 'definition'],
  primaryKey: 'id',
  foreignKeys: { tenant_id: { table: 'tenants', column: 'tenant_id', $type: null as unknown as Tenants }, },
  $type: null as unknown as Forms,
  $input: null as unknown as FormsInput
} as const;

// Table order_lines
export interface OrderLines {
  id: string;
  tenant_id: string;
  order_id: string;
  service_id: string;
  add_on_ids: string[];
  date: string;
  time_slot_id: string | null;
  start_time_24hr: string;
  end_time_24hr: string;
  service_form_data: Json | null;
}
export interface OrderLinesInput {
  id?: string;
  tenant_id: string;
  order_id: string;
  service_id: string;
  add_on_ids?: string[];
  date: string;
  time_slot_id?: string | null;
  start_time_24hr: string;
  end_time_24hr: string;
  service_form_data?: Json | null;
}
const order_lines = {
  tableName: 'order_lines',
  columns: ['id', 'tenant_id', 'order_id', 'service_id', 'add_on_ids', 'date', 'time_slot_id', 'start_time_24hr', 'end_time_24hr', 'service_form_data'],
  requiredForInsert: ['tenant_id', 'order_id', 'service_id', 'date', 'start_time_24hr', 'end_time_24hr'],
  primaryKey: 'id',
  foreignKeys: {
    tenant_id: { table: 'tenants', column: 'tenant_id', $type: null as unknown as Tenants },
    time_slot_id: { table: 'time_slots', column: 'id', $type: null as unknown as TimeSlots },
  },
  $type: null as unknown as OrderLines,
  $input: null as unknown as OrderLinesInput
} as const;

// Table orders
export interface Orders {
  id: string;
  tenant_id: string;
  customer_id: string;
  customer_form_data: Json | null;
}
export interface OrdersInput {
  id?: string;
  tenant_id: string;
  customer_id: string;
  customer_form_data?: Json | null;
}
const orders = {
  tableName: 'orders',
  columns: ['id', 'tenant_id', 'customer_id', 'customer_form_data'],
  requiredForInsert: ['tenant_id', 'customer_id'],
  primaryKey: 'id',
  foreignKeys: {
    tenant_id: { table: 'tenants', column: 'tenant_id', $type: null as unknown as Tenants },
    customer_id: { table: 'customers', column: 'id', $type: null as unknown as Customers },
  },
  $type: null as unknown as Orders,
  $input: null as unknown as OrdersInput
} as const;

// Table pricing_rules
export interface PricingRules {
  id: string;
  tenant_id: string;
  definition: Json;
}
export interface PricingRulesInput {
  id: string;
  tenant_id: string;
  definition: Json;
}
const pricing_rules = {
  tableName: 'pricing_rules',
  columns: ['id', 'tenant_id', 'definition'],
  requiredForInsert: ['id', 'tenant_id', 'definition'],
  primaryKey: 'id',
  foreignKeys: { tenant_id: { table: 'tenants', column: 'tenant_id', $type: null as unknown as Tenants }, },
  $type: null as unknown as PricingRules,
  $input: null as unknown as PricingRulesInput
} as const;

// Table resource_availability
export interface ResourceAvailability {
  id: string;
  tenant_id: string | null;
  resource_id: string | null;
  day_of_week: string;
  start_time_24hr: string;
  end_time_24hr: string;
}
export interface ResourceAvailabilityInput {
  id: string;
  tenant_id?: string | null;
  resource_id?: string | null;
  day_of_week: string;
  start_time_24hr: string;
  end_time_24hr: string;
}
const resource_availability = {
  tableName: 'resource_availability',
  columns: ['id', 'tenant_id', 'resource_id', 'day_of_week', 'start_time_24hr', 'end_time_24hr'],
  requiredForInsert: ['id', 'day_of_week', 'start_time_24hr', 'end_time_24hr'],
  primaryKey: 'id',
  foreignKeys: {
    tenant_id: { table: 'tenants', column: 'tenant_id', $type: null as unknown as Tenants },
    resource_id: { table: 'resources', column: 'id', $type: null as unknown as Resources },
  },
  $type: null as unknown as ResourceAvailability,
  $input: null as unknown as ResourceAvailabilityInput
} as const;

// Table resource_blocked_time
export interface ResourceBlockedTime {
  id: string;
  tenant_id: string;
  resource_id: string;
  date: string;
  start_time_24hr: string;
  end_time_24hr: string;
}
export interface ResourceBlockedTimeInput {
  id: string;
  tenant_id: string;
  resource_id: string;
  date: string;
  start_time_24hr: string;
  end_time_24hr: string;
}
const resource_blocked_time = {
  tableName: 'resource_blocked_time',
  columns: ['id', 'tenant_id', 'resource_id', 'date', 'start_time_24hr', 'end_time_24hr'],
  requiredForInsert: ['id', 'tenant_id', 'resource_id', 'date', 'start_time_24hr', 'end_time_24hr'],
  primaryKey: 'id',
  foreignKeys: {
    tenant_id: { table: 'tenants', column: 'tenant_id', $type: null as unknown as Tenants },
    resource_id: { table: 'resources', column: 'id', $type: null as unknown as Resources },
  },
  $type: null as unknown as ResourceBlockedTime,
  $input: null as unknown as ResourceBlockedTimeInput
} as const;

// Table resource_types
export interface ResourceTypes {
  id: string;
  tenant_id: string;
  name: string;
}
export interface ResourceTypesInput {
  id: string;
  tenant_id: string;
  name: string;
}
const resource_types = {
  tableName: 'resource_types',
  columns: ['id', 'tenant_id', 'name'],
  requiredForInsert: ['id', 'tenant_id', 'name'],
  primaryKey: 'id',
  foreignKeys: { tenant_id: { table: 'tenants', column: 'tenant_id', $type: null as unknown as Tenants }, },
  $type: null as unknown as ResourceTypes,
  $input: null as unknown as ResourceTypesInput
} as const;

// Table resources
export interface Resources {
  id: string;
  tenant_id: string;
  resource_type: string;
  name: string;
}
export interface ResourcesInput {
  id: string;
  tenant_id: string;
  resource_type: string;
  name: string;
}
const resources = {
  tableName: 'resources',
  columns: ['id', 'tenant_id', 'resource_type', 'name'],
  requiredForInsert: ['id', 'tenant_id', 'resource_type', 'name'],
  primaryKey: 'id',
  foreignKeys: {
    tenant_id: { table: 'tenants', column: 'tenant_id', $type: null as unknown as Tenants },
    resource_type: { table: 'resource_types', column: 'id', $type: null as unknown as ResourceTypes },
  },
  $type: null as unknown as Resources,
  $input: null as unknown as ResourcesInput
} as const;

// Table schemaversion
export interface Schemaversion {
  version: number;
  name: string | null;
  md5: string | null;
  run_at: Date | null;
}
export interface SchemaversionInput {
  version: number;
  name?: string | null;
  md5?: string | null;
  run_at?: Date | null;
}
const schemaversion = {
  tableName: 'schemaversion',
  columns: ['version', 'name', 'md5', 'run_at'],
  requiredForInsert: ['version'],
  primaryKey: 'version',
  foreignKeys: {},
  $type: null as unknown as Schemaversion,
  $input: null as unknown as SchemaversionInput
} as const;

// Table services
export interface Services {
  id: string;
  tenant_id: string;
  service_id: string;
  name: string;
  description: string;
  duration_minutes: number;
  price: number;
  price_currency: string;
  permitted_add_on_ids: string[];
  resource_types_required: string[];
  requires_time_slot: boolean;
  form_id: string | null;
  customer_form_id: string | null;
}
export interface ServicesInput {
  id: string;
  tenant_id: string;
  service_id: string;
  name: string;
  description: string;
  duration_minutes: number;
  price: number;
  price_currency: string;
  permitted_add_on_ids: string[];
  resource_types_required: string[];
  requires_time_slot: boolean;
  form_id?: string | null;
  customer_form_id?: string | null;
}
const services = {
  tableName: 'services',
  columns: ['id', 'tenant_id', 'service_id', 'name', 'description', 'duration_minutes', 'price', 'price_currency', 'permitted_add_on_ids', 'resource_types_required', 'requires_time_slot', 'form_id', 'customer_form_id'],
  requiredForInsert: ['id', 'tenant_id', 'service_id', 'name', 'description', 'duration_minutes', 'price', 'price_currency', 'permitted_add_on_ids', 'resource_types_required', 'requires_time_slot'],
  primaryKey: 'id',
  foreignKeys: {
    tenant_id: { table: 'tenants', column: 'tenant_id', $type: null as unknown as Tenants },
    form_id: { table: 'forms', column: 'id', $type: null as unknown as Forms },
    customer_form_id: { table: 'forms', column: 'id', $type: null as unknown as Forms },
  },
  $type: null as unknown as Services,
  $input: null as unknown as ServicesInput
} as const;

// Table tenant_settings
export interface TenantSettings {
  tenant_id: string;
  customer_form_id: string | null;
}
export interface TenantSettingsInput {
  tenant_id: string;
  customer_form_id?: string | null;
}
const tenant_settings = {
  tableName: 'tenant_settings',
  columns: ['tenant_id', 'customer_form_id'],
  requiredForInsert: ['tenant_id'],
  primaryKey: 'tenant_id',
  foreignKeys: {
    tenant_id: { table: 'tenants', column: 'tenant_id', $type: null as unknown as Tenants },
    customer_form_id: { table: 'forms', column: 'id', $type: null as unknown as Forms },
  },
  $type: null as unknown as TenantSettings,
  $input: null as unknown as TenantSettingsInput
} as const;

// Table tenants
export interface Tenants {
  tenant_id: string;
  name: string;
}
export interface TenantsInput {
  tenant_id: string;
  name: string;
}
const tenants = {
  tableName: 'tenants',
  columns: ['tenant_id', 'name'],
  requiredForInsert: ['tenant_id', 'name'],
  primaryKey: 'tenant_id',
  foreignKeys: {},
  $type: null as unknown as Tenants,
  $input: null as unknown as TenantsInput
} as const;

// Table time_slots
export interface TimeSlots {
  id: string;
  tenant_id: string;
  description: string;
  start_time_24hr: string;
  end_time_24hr: string;
  tag: string | null;
}
export interface TimeSlotsInput {
  id: string;
  tenant_id: string;
  description: string;
  start_time_24hr: string;
  end_time_24hr: string;
  tag?: string | null;
}
const time_slots = {
  tableName: 'time_slots',
  columns: ['id', 'tenant_id', 'description', 'start_time_24hr', 'end_time_24hr', 'tag'],
  requiredForInsert: ['id', 'tenant_id', 'description', 'start_time_24hr', 'end_time_24hr'],
  primaryKey: 'id',
  foreignKeys: { tenant_id: { table: 'tenants', column: 'tenant_id', $type: null as unknown as Tenants }, },
  $type: null as unknown as TimeSlots,
  $input: null as unknown as TimeSlotsInput
} as const;


export interface TableTypes {
  add_on: {
    select: AddOn;
    input: AddOnInput;
  };
  blocked_time: {
    select: BlockedTime;
    input: BlockedTimeInput;
  };
  bookings: {
    select: Bookings;
    input: BookingsInput;
  };
  business_hours: {
    select: BusinessHours;
    input: BusinessHoursInput;
  };
  customers: {
    select: Customers;
    input: CustomersInput;
  };
  forms: {
    select: Forms;
    input: FormsInput;
  };
  order_lines: {
    select: OrderLines;
    input: OrderLinesInput;
  };
  orders: {
    select: Orders;
    input: OrdersInput;
  };
  pricing_rules: {
    select: PricingRules;
    input: PricingRulesInput;
  };
  resource_availability: {
    select: ResourceAvailability;
    input: ResourceAvailabilityInput;
  };
  resource_blocked_time: {
    select: ResourceBlockedTime;
    input: ResourceBlockedTimeInput;
  };
  resource_types: {
    select: ResourceTypes;
    input: ResourceTypesInput;
  };
  resources: {
    select: Resources;
    input: ResourcesInput;
  };
  schemaversion: {
    select: Schemaversion;
    input: SchemaversionInput;
  };
  services: {
    select: Services;
    input: ServicesInput;
  };
  tenant_settings: {
    select: TenantSettings;
    input: TenantSettingsInput;
  };
  tenants: {
    select: Tenants;
    input: TenantsInput;
  };
  time_slots: {
    select: TimeSlots;
    input: TimeSlotsInput;
  };
}

export const tables = {
  add_on,
  blocked_time,
  bookings,
  business_hours,
  customers,
  forms,
  order_lines,
  orders,
  pricing_rules,
  resource_availability,
  resource_blocked_time,
  resource_types,
  resources,
  schemaversion,
  services,
  tenant_settings,
  tenants,
  time_slots,
}
